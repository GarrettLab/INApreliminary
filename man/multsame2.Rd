% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multsame2.R
\name{multsame2}
\alias{multsame2}
\title{Runs and summarizes multiple INA simulations with the same parameter values}
\usage{
multsame2(nreals, usethresh, nsteps2, xymatinn2, readxymat2, readorgenxy22,
  comamn2, dispamn2, readcomamn2, readdispamn2, efmn22, efsd22, efthr22,
  sampeffort22, extx22, exty22, nodenum22, rand22, readinitinfo.s2,
  initinfo.s2, loctypei2, numiniti2, numorpropi2, propiniti2,
  readinitbio.s2, initbio.s2, loctypeb2, numinitb2, numorpropb2,
  propinitb2, distfcn2, lktypecn2, placn2, plbcn2, randpcn2, tlinkcn2,
  distfdn2, lktypedn2, pladn2, plbdn2, randpdn2, tlinkdn2, diag1cn2,
  mattypecn2, max1cn2, diag1dn2, mattypedn2, max1dn2, adpmn2, adpsdn2,
  padopt2, readpadopt2, estpmn2, estpsdn2, pestabn2, readpestabn2,
  plotmpn2 = F)
}
\arguments{
\item{nreals}{number of realizations to be evaluated}

\item{usethresh}{if T, information is never present anywhere unless the management effect estimate exceeds the threshold}

\item{nsteps2}{number of time steps to be evaluated}

\item{xymatinn2}{matrix of x,y coordinates of nodes, read in if readxymat2=T}

\item{readxymat2}{if T, read in xymatinn2 - otherwise, generate it in each realization (related readxymat2=T and readorgenxy='read')}

\item{readorgenxy22}{read in the xy coordinates for locations (readorgenxy22 = 'read') or generate the xy coordinates by calling genlocs (readorgenxy22 = 'gen')}

\item{comamn2}{communication adjacency matrix, read in if readcomamn2=T}

\item{dispamn2}{dispersal adjacency matrix, read in if readdispamn2=T}

\item{readcomamn2}{if T, the communication adjacency matrix is read in rather than being generated from the outset}

\item{readdispamn2}{if T, the dispersal adjacency matrix is read in rather than being generated from the outset}

\item{efmn22}{(estinfo) the underlying mean change in establishment probability (as a proportion)}

\item{efsd22}{(estinfo) the standard deviation of the effect}

\item{efthr22}{(estinfo) the threshold effect size for communicating about management (if efthr22 = 0 there is no threshold so communication can always occur)}

\item{sampeffort22}{(estinfo) sampling effort, where greater samping effort reduces the error in estimating the management effect}

\item{extx22}{(genlocs) range of x coordinates}

\item{exty22}{(genlocs) range of y coordinates}

\item{nodenum22}{(genlocs) the number of nodes}

\item{rand22}{(genlocs) if TRUE then locations are randomly generated}

\item{readinitinfo.s2}{info (setup2) if T, the initial values for the vector of starting locations for the presence of information are read in rather than generated}

\item{initinfo.s2}{info (setup2) the vector of initial values read in if readinitinfo.s == T, a vector with lenth equal to the number of nodes and entries 1s or 0s with 1s indicating the initial presence of information}

\item{loctypei2}{info (initvals) the type of locations where initial presence occurs: 'random' indicates all equally likely, 'upedge' indicates that nodes closest to the upper edge have presence, 'rightedge' indicates that nodes closest to the right edge have presence}

\item{numiniti2}{info (initvals) the number of initial locations for presence}

\item{numorpropi2}{info (initvals) 'num' indicates initial number for presence, 'prop' indicates initial proportion}

\item{propiniti2}{info (initvals) the proportion of initial locations for presence}

\item{readinitbio.s2}{bio (setup2) if T, the initial values for the vector of starting locations for the presence of the bioentity are read in rather than generated}

\item{initbio.s2}{bio (setup2) the vector of initial values read in if readinitbio.s == T, a vector with lenth equal to the number of nodes and entries 1s or 0s with 1s indicating the initial presence of the bioentity}

\item{loctypeb2}{estab (initvals) the type of locations where initial presence occurs: 'random' indicates all equally likely, 'upedge' indicates that nodes closest to the upper edge have presence, 'rightedge' indicates that nodes closest to the right edge have presence}

\item{numinitb2}{estab (initvals) the number of initial locations for presence}

\item{numorpropb2}{estab (initvals) 'num' indicates initial number for presence, 'prop' indicates initial proportion}

\item{propinitb2}{estab (initvals) the proportion of initial locations for presence}

\item{distfcn2}{com (genmovnet) the function of distance used to estimate movement probability - 'random' (not related to distance) or 'powerlaw'}

\item{lktypecn2}{com (genmovnet) link type, pa is presence/absence (unweighted, occurence/non-occurence), pr is a probability of occurence, wtd1 is general weight}

\item{placn2}{com (genmovnet) power law parameter a in ad^(-b)}

\item{plbcn2}{com (genmovnet) power law parameter b in ad^(-b)}

\item{randpcn2}{com (genmovnet) random case, probability of link}

\item{tlinkcn2}{com (genmovnet) threshold for whether link exists (probability in some cases); used if lktypecn2 = pa}

\item{distfdn2}{disp (genmovnet) the function of distance used to estimate movement probability - 'random' (not related to distance) or 'powerlaw'}

\item{lktypedn2}{disp (genmovnet) link type, pa is presence/absence (unweighted, occurence/non-occurence), pr is a probability of occurence, wtd1 is general weight}

\item{pladn2}{disp (genmovnet) power law parameter a in ad^(-b)}

\item{plbdn2}{disp (genmovnet) power law parameter b in ad^(-b)}

\item{randpdn2}{disp (genmovnet) random case, probably of link}

\item{tlinkdn2}{disp (genmovnet) threshold for whether link exists (probability in some cases); used if lktypedn2 = pa (to be confirmed)}

\item{diag1cn2}{com (spreadstep) if T, diagonal of adj mat is given value 1}

\item{mattypecn2}{com (spreadstep) 'fromto' indicates that rows are sources and columns are sinks, 'tofrom' indicates that columns are sources and rows are sinks}

\item{max1cn2}{com (spreadstep) if T, values in vect2 greater than 1 are replaced by 1}

\item{diag1dn2}{disp (spreadstep) if T, diagonal of adj mat is given value 1}

\item{mattypedn2}{disp (spreadstep) 'fromto' indicates that rows are sources and columns are sinks, 'tofrom' indicates that columns are sources and rows are sinks}

\item{max1dn2}{disp (spreadstep) if T, values in vect2 greater than 1 are replaced by 1}

\item{adpmn2}{(makedec) mean probability of adopting management if informed}

\item{adpsdn2}{(makedec) sd in truncated normal distribution of probability of adoption}

\item{padopt2}{vector of probabilities of adoption if informed for nodes in the network (\code{readpadopt} determines whether \code{padopt} is read in to \code{makedec} or generated within \code{makedec} based on \code{adpm} and \code{adpsd})}

\item{readpadopt2}{if T, then a VECTOR of padopt values is read in; if F, \code{adpm} and \code{adpsd} are used to generate the vector}

\item{estpmn2}{(estab) mean probability of establishment (new or CONTINUED) in absence of management}

\item{estpsdn2}{(estab) sd in truncated normal distribution for probability of establishment in absence of management}

\item{pestabn2}{(estab) vector of probabilities of establishment (read in or generated when the function is run, depending on \code{readpestab} equal to T or F)}

\item{readpestabn2}{(estab) if T, then a vector \code{pestabn2} is read in; otherwise the vector is generated using \code{estpmn2} and \code{estpsdn2}}

\item{plotmpn2}{if true plots of resulting presence of information and species are generated}

\item{vect1cn2}{com (spreadstep) status of nodes before spread}

\item{vect1dn2}{disp (spreadstep) status of nodes before spread}

\item{efmnn2}{(estab) mean management effect (proportional reduction in estabp) (same as efmn22 to function estinfo)}

\item{efsdn2}{(estab) sd of management effect (same as efsd22 to function estinfo)}
}
\description{
This function runs and summarizes multiple INA simulations with the same parameter values.  (It uses functions estinfo, genlocs, initvals, setup2, genmovnet, spreadstep, makedec, estab, and ntsteps2.)
}
\details{
Updated 2020-06-11
}
\examples{
x5 <- multsame2(nreals=10, nsteps2=3, usethresh=F, readxymat2=T, readorgenxy22='read', xymatinn2=matrix(c(1,1, 1,2, 1,3, 2,1, 2,2, 2,3),byrow=T,ncol=2), readcomamn2=F, readdispamn2=F, efmn22=0.5, efsd22=0.1, efthr22=0.5, sampeffort22=1, extx22=NA, exty22=NA, nodenum22=NA, rand22=NA, readinitinfo.s2=F, loctypei2='random', numiniti2=5, numorpropi2='num', propiniti2=NA, readinitbio.s2=F, loctypeb2='upedge', numinitb2=5, numorpropb2='num', propinitb2=NA, distfcn2='powerlaw', lktypecn2='pa', placn2=1, plbcn2=1, randpcn2=NA, tlinkcn2=0.1, distfdn2='powerlaw', lktypedn2='pa', pladn2=1, plbdn2=1, randpdn2=NA, tlinkdn2=0.1, diag1cn2=T, mattypecn2='fromto', max1cn2=T, diag1dn2=T, mattypedn2='fromto', max1dn2=T, adpmn2=0.5, adpsdn2=0.1, padopt2=NA, readpadopt2=F, estpmn2=0.5, estpsdn2=0.1, pestabn2=NA, readpestabn2=F, plotmpn2=F)
x3 <- multsame2(nreals=2,nsteps=3, usethresh=F, readxymat2=T, readorgenxy22='read', xymatinn2=matrix(runif(n=100)*100,byrow=T,ncol=2), readcomamn2=F, readdispamn2=F, efmn22=0.5, efsd22=0.1, efthr22=0.5, sampeffort22=1, extx22=NA, exty22=NA, nodenum22=NA, rand22=NA, readinitinfo.s2=F, loctypei2='random', numiniti2=5, numorpropi2='num', propiniti2=0.05, readinitbio.s2=F, loctypeb2='upedge', numinitb2=5, numorpropb2='num', propinitb2=0.05, distfcn2='powerlaw', lktypecn2='pa', placn2=1, plbcn2=1, randpcn2=NA, tlinkcn2=0.1, distfdn2='powerlaw', lktypedn2='pa', pladn2=1, plbdn2=1, randpdn2=NA, tlinkdn2=0.1, diag1cn2=T, mattypecn2='fromto', max1cn2=T, diag1dn2=T, mattypedn2='fromto', max1dn2=T, adpmn2=0.5, adpsdn2=c(0,1), padopt2=NA, readpadopt2=F, estpmn2=0.5, estpsdn2=0.1, pestabn2=NA, readpestabn2=F, plotmpn2=F)
}
\keyword{experiments}
\keyword{simulation}
