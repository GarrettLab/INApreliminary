% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ntsteps2.R
\name{ntsteps2}
\alias{ntsteps2}
\title{Changes management info status and bioentity establishment status at each node across multiple time steps}
\usage{
ntsteps2(
  nsteps,
  xymatinn,
  infon,
  vect1cn,
  vect1dn,
  comamn,
  dispamn,
  readcomamn,
  readdispamn,
  distfcn,
  lktypecn,
  placn,
  plbcn,
  randpcn,
  tlinkcn,
  distfdn,
  lktypedn,
  pladn,
  plbdn,
  randpdn,
  tlinkdn,
  diag1cn,
  mattypecn,
  max1cn,
  diag1dn,
  mattypedn,
  max1dn,
  readpadoptn,
  padoptn,
  adpmn,
  adpsdn,
  estpmn,
  estpsdn,
  manredestab2,
  efmnn,
  efsdn,
  pestabn,
  readpestabn,
  plotmpn = F
)
}
\arguments{
\item{nsteps}{number of time steps to be evaluated}

\item{xymatinn}{matrix of x,y coordinates of nodes}

\item{infon}{is T if estimated effect size exceeds threshold for communication (so communication can occur), F otherwise (can be evaluated in estinfo and/or setup2)}

\item{vect1cn}{com (spreadstep) status of nodes before spread}

\item{vect1dn}{disp (spreadstep) status of nodes before spread}

\item{comamn}{communication adjacency matrix, read in if readcomamn=T}

\item{dispamn}{dispersal adjacency matrix, read in if readdispamn=T}

\item{readcomamn}{if T, the communication adjacency matrix is read in rather than being generated by function genmovnet}

\item{readdispamn}{if T, the dispersal adjacency matrix is read in rather than being generated by function genmovnet}

\item{distfcn}{com (genmovnet) the function of distance used to estimate movement probability - 'random' (not related to distance) or 'powerlaw'}

\item{lktypecn}{com (genmovnet) link type, pa is presence/absence (unweighted, occurence/non-occurence), pr is a probability of occurence, wtd1 is general weight}

\item{placn}{com (genmovnet) inverse power law parameter a in ad^(-b)}

\item{plbcn}{com (genmovnet) inverse power law parameter b in ad^(-b)}

\item{randpcn}{com (genmovnet) random case, probably of link}

\item{tlinkcn}{com (genmovnet) threshold for whether link exists (probability in some cases)}

\item{distfdn}{disp (genmovnet) the function of distance used to estimate movement probability - 'random' (not related to distance) or 'powerlaw'}

\item{lktypedn}{disp (genmovnet) link type, pa is presence/absence (unweighted, occurence/non-occurence), pr is a probability of occurence, wtd1 is general weight}

\item{pladn}{disp (genmovnet) inverse power law parameter a in ad^(-b)}

\item{plbdn}{disp (genmovnet) inverse power law parameter b in ad^(-b)}

\item{randpdn}{disp (genmovnet) random case, probably of link}

\item{tlinkdn}{disp (genmovnet) threshold for whether link exists (probability in some cases)}

\item{diag1cn}{com (spreadstep) if T, diagonal of adj mat is given value 1}

\item{mattypecn}{com (spreadstep) 'fromto' indicates that rows are sources and columns are sinks, 'tofrom' indicates that columns are sources and rows are sinks}

\item{max1cn}{com (spreadstep) if T, values in vect2 greater than 1 are replaced by 1}

\item{diag1dn}{disp (spreadstep) if T, diagonal of adj mat is given value 1}

\item{mattypedn}{disp (spreadstep) 'fromto' indicates that rows are sources and columns are sinks, 'tofrom' indicates that columns are sources and rows are sinks}

\item{max1dn}{disp (spreadstep) if T, values in vect2 greater than 1 are replaced by 1}

\item{readpadoptn}{if T, then a VECTOR of padopt values is read in; if F, \code{adpm} and \code{adpsd} are used to generate the vector}

\item{padoptn}{vector of probabilities of adoption if informed for nodes in the network (\code{readpadopt} determines whether \code{padopt} is read in to \code{makedec} or generated within \code{makedec} based on \code{adpm} and \code{adpsd})}

\item{adpmn}{(makedec) mean probability of adopting management if informed}

\item{adpsdn}{(makedec) sd in truncated normal distribution of probability of adoption}

\item{estpmn}{(estab) mean probability of establishment (new or CONTINUED) in absence of management}

\item{estpsdn}{(estab) sd in probability of establishment in truncated normal distribution}

\item{efmnn}{(estab) mean management effect (proportional reduction in estabp)}

\item{efsdn}{(estab) sd of management effect}

\item{pestabn}{(estab) vector of probabilities of establishment (read in or generated when the function is run, depending on \code{readpestab} equal to T or F)}

\item{readpestabn}{(estab) if T, then a vector \code{pestabn} is read in; otherwise the vector is generated using \code{estpmn} and \code{estpsd}}

\item{plotmpn}{if T, plots of resulting presence of information and species are generated}

\item{comvec}{vector of 1=info is present, 0=info is not present}
}
\description{
This function gives the info status and establishment status at each node after multiple time steps. Its use follows use of the function \code{setup2}, or another source of node locations and initial conditions.  (Note that communication and dispersal status are given for the beginning of the time step (rather than for the end), so the corresponding output for these has length equal to the number of time steps plus 1.  In contrast, adoption and establishment output is of length equal to the number of time steps.) It uses the following functions, as needed: genmovnet, spreadstep, makedec, and estab. It draws on output from function setup2 in terms of whether communication occurs (estinfo), generated geographic locations of nodes as needed (genloc), and the initial locations for management information and the bioentity.
}
\details{
Updated 2020-07-13
}
\examples{
x2 <- ntsteps2(nsteps=3, infon=T, xymatinn=matrix(c(1,1, 1,2, 1,3, 2,1, 2,2, 2,3),byrow=T,ncol=2), vect1cn=c(1,1,1,0,0,0), vect1dn=c(0,0,0,1,1,1), distfcn='powerlaw', lktypecn='pa', placn=1, plbcn=1, tlinkcn=0.1, distfdn='powerlaw', lktypedn='pa', pladn=1, plbdn=1, tlinkdn=0.1, readcomamn=F, readdispamn=F, diag1cn=T, mattypecn='fromto', max1cn=T, diag1dn=T, mattypedn='fromto', adpmn=0.5, adpsdn=0.1, estpmn=0.5, estpsdn=0.1, manredestab2=T, efmnn=0.5, efsdn=0.1,  max1dn=T, readpestabn=F, readpadoptn=F, plotmpn=T)
x2z <- ntsteps2(nsteps=3, infon=T, xymatinn=matrix(c(1,1, 1,2, 1,3, 2,1, 2,2, 2,3),byrow=T,ncol=2), vect1cn=c(1,1,1,0,0,0), vect1dn=c(0,0,0,1,1,1), distfcn='powerlaw', lktypecn='pa', placn=0.5, plbcn=2, tlinkcn=0.1, distfdn='powerlaw', lktypedn='pa', pladn=0.5, plbdn=2, tlinkdn=0.1, readcomamn=F, readdispamn=F, diag1cn=T, mattypecn='fromto', max1cn=T, diag1dn=T, mattypedn='fromto', adpmn=0.5, adpsdn=0.1, estpmn=0.5, estpsdn=0.1, manredestab2=T, efmnn=0.5, efsdn=0.1, max1dn=T, readpestabn=F, readpadoptn=F, plotmpn=T)
x3 <- ntsteps2(nsteps=2, infon=T, xymatinn=matrix(runif(n=100)*100,byrow=T,ncol=2), vect1cn=c(rep(1,10),rep(0,40)), vect1dn=sample(c(rep(1,10),rep(0,40))), distfcn='powerlaw', lktypecn='pa', placn=1, plbcn=1, tlinkcn=0.1, distfdn='powerlaw', lktypedn='pa', pladn=1, plbdn=1, tlinkdn=0.1, readcomamn=F, readdispamn=F, diag1cn=T, mattypecn='fromto', max1cn=T, diag1dn=T, mattypedn='fromto', adpmn=0.5, adpsdn=0.1, estpmn=0.5, estpsdn=0.1, manredestab2=T, efmnn=0.5, efsdn=0.1,  max1dn=T, readpestabn=F, readpadoptn=F, plotmpn=T)
x9 <- ntsteps2(nsteps=3, infon=T, xymatinn=matrix(c(1,1, 1,2, 1,3, 2,1, 2,2, 2,3),byrow=T,ncol=2), vect1cn=c(1,1,1,0,0,0), vect1dn=c(0,0,0,1,1,1),comamn=matrix(c(0,1,0,0,0,0, 0,0,1,0,0,0, 0,0,0,1,0,0, 0,0,0,0,1,0, 0,0,0,0,0,1, 1,0,0,0,0,0),byrow=T,ncol=6), dispamn=matrix(c(0,0,0,0,0,0, 0,0,1,0,0,0, 0,0,0,1,0,0, 0,0,0,0,1,0, 0,0,0,0,0,1, 1,0,0,0,0,0),byrow=T,ncol=6), readcomamn=T, readdispamn=T, diag1cn=T, mattypecn='fromto', max1cn=T, diag1dn=T, mattypedn='fromto', max1dn=T, adpmn=0.3, adpsdn=0.1, estpmn=0.2, estpsdn=0.1, manredestab2=T, efmnn=0.5, efsdn=0.1, readpestabn=F, readpadoptn=F, plotmpn=T)
x12 <- ntsteps2(nsteps=3, infon=F, xymatinn=matrix(c(1,1, 1,2, 1,3, 2,1, 2,2, 2,3),byrow=T,ncol=2), vect1cn=c(1,1,1,0,0,0), vect1dn=c(0,0,0,1,1,1), distfcn='powerlaw', lktypecn='pa', placn=1, plbcn=1, tlinkcn=0.1, distfdn='powerlaw', lktypedn='pa', pladn=1, plbdn=1, tlinkdn=0.1, readcomamn=F, readdispamn=F, diag1cn=T, mattypecn='fromto', max1cn=T, diag1dn=T, mattypedn='fromto', max1dn=T, adpmn=0.3, adpsdn=0.1, estpmn=0.2, estpsdn=0.1, manredestab2=T, efmnn=0.5, efsdn=0.1, readpestabn=F, readpadoptn=F, plotmpn=T)
x13 <- ntsteps2(nsteps=5, infon=T, xymatinn=matrix(c(1,1, 1,2, 1,3, 2,1, 2,2, 2,3),byrow=T,ncol=2), vect1cn=c(1,1,1,0,0,0), vect1dn=c(0,0,0,1,1,1), distfcn='powerlaw', lktypecn='pa', placn=1, plbcn=1, tlinkcn=0.1, distfdn='powerlaw', lktypedn='pa', pladn=1, plbdn=1, tlinkdn=0.1, readcomamn=F, readdispamn=F, diag1cn=T, mattypecn='fromto', max1cn=T, diag1dn=T, mattypedn='fromto', max1dn=T, adpmn=0.3, adpsdn=0.1, estpmn=0.2, estpsdn=0.1, manredestab2=T, efmnn=0.5, efsdn=0.1, readpestabn=F, readpadoptn=F, plotmpn=T)
}
\keyword{experiments}
\keyword{simulation}
